using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;

/* StringHelpers
 * C# extension methods for the String type.
 * Copyright © 2013 Clay Miller (clay@smockle.com)
 */

namespace Smockle.Helpers {
	public static class StringHelpers {
		/// <summary>
		/// Returns the file extension associated with a given MIME type.
		/// </summary>
		/// <param name="mimetype">MIME type.</param>
		/// <returns>File extension.</returns>
		public static string GetExtension(this string mimetype) {
			Dictionary<string, string> mappings = new Dictionary<string, string>();
			#region
			mappings.Add(".323", "text/h323");
			mappings.Add(".3g2", "video/3gpp2");
			mappings.Add(".3gp", "video/3gpp");
			mappings.Add(".3gp2", "video/3gpp2");
			mappings.Add(".3gpp", "video/3gpp");
			mappings.Add(".7z", "application/x-7z-compressed");
			mappings.Add(".aa", "audio/audible");
			mappings.Add(".AAC", "audio/aac");
			mappings.Add(".aaf", "application/octet-stream");
			mappings.Add(".aax", "audio/vnd.audible.aax");
			mappings.Add(".ac3", "audio/ac3");
			mappings.Add(".aca", "application/octet-stream");
			mappings.Add(".accda", "application/msaccess.addin");
			mappings.Add(".accdb", "application/msaccess");
			mappings.Add(".accdc", "application/msaccess.cab");
			mappings.Add(".accde", "application/msaccess");
			mappings.Add(".accdr", "application/msaccess.runtime");
			mappings.Add(".accdt", "application/msaccess");
			mappings.Add(".accdw", "application/msaccess.webapplication");
			mappings.Add(".accft", "application/msaccess.ftemplate");
			mappings.Add(".acx", "application/internet-property-stream");
			mappings.Add(".AddIn", "text/xml");
			mappings.Add(".ade", "application/msaccess");
			mappings.Add(".adobebridge", "application/x-bridge-url");
			mappings.Add(".adp", "application/msaccess");
			mappings.Add(".ADT", "audio/vnd.dlna.adts");
			mappings.Add(".ADTS", "audio/aac");
			mappings.Add(".afm", "application/octet-stream");
			mappings.Add(".ai", "application/postscript");
			mappings.Add(".aif", "audio/x-aiff");
			mappings.Add(".aifc", "audio/aiff");
			mappings.Add(".aiff", "audio/aiff");
			mappings.Add(".air", "application/vnd.adobe.air-application-installer-package+zip");
			mappings.Add(".amc", "application/x-mpeg");
			mappings.Add(".application", "application/x-ms-application");
			mappings.Add(".art", "image/x-jg");
			mappings.Add(".asa", "application/xml");
			mappings.Add(".asax", "application/xml");
			mappings.Add(".ascx", "application/xml");
			mappings.Add(".asd", "application/octet-stream");
			mappings.Add(".asf", "video/x-ms-asf");
			mappings.Add(".ashx", "application/xml");
			mappings.Add(".asi", "application/octet-stream");
			mappings.Add(".asm", "text/plain");
			mappings.Add(".asmx", "application/xml");
			mappings.Add(".aspx", "application/xml");
			mappings.Add(".asr", "video/x-ms-asf");
			mappings.Add(".asx", "video/x-ms-asf");
			mappings.Add(".atom", "application/atom+xml");
			mappings.Add(".au", "audio/basic");
			mappings.Add(".avi", "video/x-msvideo");
			mappings.Add(".axs", "application/olescript");
			mappings.Add(".bas", "text/plain");
			mappings.Add(".bcpio", "application/x-bcpio");
			mappings.Add(".bin", "application/octet-stream");
			mappings.Add(".bmp", "image/bmp");
			mappings.Add(".c", "text/plain");
			mappings.Add(".cab", "application/octet-stream");
			mappings.Add(".caf", "audio/x-caf");
			mappings.Add(".calx", "application/vnd.ms-office.calx");
			mappings.Add(".cat", "application/vnd.ms-pki.seccat");
			mappings.Add(".cc", "text/plain");
			mappings.Add(".cd", "text/plain");
			mappings.Add(".cdda", "audio/aiff");
			mappings.Add(".cdf", "application/x-cdf");
			mappings.Add(".cer", "application/x-x509-ca-cert");
			mappings.Add(".chm", "application/octet-stream");
			mappings.Add(".class", "application/x-java-applet");
			mappings.Add(".clp", "application/x-msclip");
			mappings.Add(".cmx", "image/x-cmx");
			mappings.Add(".cnf", "text/plain");
			mappings.Add(".cod", "image/cis-cod");
			mappings.Add(".config", "application/xml");
			mappings.Add(".contact", "text/x-ms-contact");
			mappings.Add(".coverage", "application/xml");
			mappings.Add(".cpio", "application/x-cpio");
			mappings.Add(".cpp", "text/plain");
			mappings.Add(".crd", "application/x-mscardfile");
			mappings.Add(".crl", "application/pkix-crl");
			mappings.Add(".crt", "application/x-x509-ca-cert");
			mappings.Add(".cs", "text/plain");
			mappings.Add(".csdproj", "text/plain");
			mappings.Add(".csh", "application/x-csh");
			mappings.Add(".csproj", "text/plain");
			mappings.Add(".css", "text/css");
			mappings.Add(".csv", "application/octet-stream");
			mappings.Add(".cur", "application/octet-stream");
			mappings.Add(".cxx", "text/plain");
			mappings.Add(".dat", "application/octet-stream");
			mappings.Add(".datasource", "application/xml");
			mappings.Add(".dbproj", "text/plain");
			mappings.Add(".dcr", "application/x-director");
			mappings.Add(".def", "text/plain");
			mappings.Add(".deploy", "application/octet-stream");
			mappings.Add(".der", "application/x-x509-ca-cert");
			mappings.Add(".dgml", "application/xml");
			mappings.Add(".dib", "image/bmp");
			mappings.Add(".dif", "video/x-dv");
			mappings.Add(".dir", "application/x-director");
			mappings.Add(".disco", "text/xml");
			mappings.Add(".dll", "application/x-msdownload");
			mappings.Add(".dll.config", "text/xml");
			mappings.Add(".dlm", "text/dlm");
			mappings.Add(".doc", "application/msword");
			mappings.Add(".docm", "application/vnd.ms-word.document.macroEnabled.12");
			mappings.Add(".docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document");
			mappings.Add(".dot", "application/msword");
			mappings.Add(".dotm", "application/vnd.ms-word.template.macroEnabled.12");
			mappings.Add(".dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template");
			mappings.Add(".dsp", "application/octet-stream");
			mappings.Add(".dsw", "text/plain");
			mappings.Add(".dtd", "text/xml");
			mappings.Add(".dtsConfig", "text/xml");
			mappings.Add(".dv", "video/x-dv");
			mappings.Add(".dvi", "application/x-dvi");
			mappings.Add(".dwf", "drawing/x-dwf");
			mappings.Add(".dwp", "application/octet-stream");
			mappings.Add(".dxr", "application/x-director");
			mappings.Add(".eml", "message/rfc822");
			mappings.Add(".emz", "application/octet-stream");
			mappings.Add(".eot", "application/octet-stream");
			mappings.Add(".eps", "application/postscript");
			mappings.Add(".etl", "application/etl");
			mappings.Add(".etx", "text/x-setext");
			mappings.Add(".evy", "application/envoy");
			mappings.Add(".exe", "application/octet-stream");
			mappings.Add(".exe.config", "text/xml");
			mappings.Add(".fdf", "application/vnd.fdf");
			mappings.Add(".fif", "application/fractals");
			mappings.Add(".filters", "Application/xml");
			mappings.Add(".fla", "application/octet-stream");
			mappings.Add(".flr", "x-world/x-vrml");
			mappings.Add(".flv", "video/x-flv");
			mappings.Add(".fsscript", "application/fsharp-script");
			mappings.Add(".fsx", "application/fsharp-script");
			mappings.Add(".generictest", "application/xml");
			mappings.Add(".gif", "image/gif");
			mappings.Add(".group", "text/x-ms-group");
			mappings.Add(".gsm", "audio/x-gsm");
			mappings.Add(".gtar", "application/x-gtar");
			mappings.Add(".gz", "application/x-gzip");
			mappings.Add(".h", "text/plain");
			mappings.Add(".hdf", "application/x-hdf");
			mappings.Add(".hdml", "text/x-hdml");
			mappings.Add(".hhc", "application/x-oleobject");
			mappings.Add(".hhk", "application/octet-stream");
			mappings.Add(".hhp", "application/octet-stream");
			mappings.Add(".hlp", "application/winhlp");
			mappings.Add(".hpp", "text/plain");
			mappings.Add(".hqx", "application/mac-binhex40");
			mappings.Add(".hta", "application/hta");
			mappings.Add(".htc", "text/x-component");
			mappings.Add(".htm", "text/html");
			mappings.Add(".html", "text/html");
			mappings.Add(".htt", "text/webviewhtml");
			mappings.Add(".hxa", "application/xml");
			mappings.Add(".hxc", "application/xml");
			mappings.Add(".hxd", "application/octet-stream");
			mappings.Add(".hxe", "application/xml");
			mappings.Add(".hxf", "application/xml");
			mappings.Add(".hxh", "application/octet-stream");
			mappings.Add(".hxi", "application/octet-stream");
			mappings.Add(".hxk", "application/xml");
			mappings.Add(".hxq", "application/octet-stream");
			mappings.Add(".hxr", "application/octet-stream");
			mappings.Add(".hxs", "application/octet-stream");
			mappings.Add(".hxt", "text/html");
			mappings.Add(".hxv", "application/xml");
			mappings.Add(".hxw", "application/octet-stream");
			mappings.Add(".hxx", "text/plain");
			mappings.Add(".i", "text/plain");
			mappings.Add(".ico", "image/x-icon");
			mappings.Add(".ics", "application/octet-stream");
			mappings.Add(".idl", "text/plain");
			mappings.Add(".ief", "image/ief");
			mappings.Add(".iii", "application/x-iphone");
			mappings.Add(".inc", "text/plain");
			mappings.Add(".inf", "application/octet-stream");
			mappings.Add(".inl", "text/plain");
			mappings.Add(".ins", "application/x-internet-signup");
			mappings.Add(".ipa", "application/x-itunes-ipa");
			mappings.Add(".ipg", "application/x-itunes-ipg");
			mappings.Add(".ipproj", "text/plain");
			mappings.Add(".ipsw", "application/x-itunes-ipsw");
			mappings.Add(".iqy", "text/x-ms-iqy");
			mappings.Add(".isp", "application/x-internet-signup");
			mappings.Add(".ite", "application/x-itunes-ite");
			mappings.Add(".itlp", "application/x-itunes-itlp");
			mappings.Add(".itms", "application/x-itunes-itms");
			mappings.Add(".itpc", "application/x-itunes-itpc");
			mappings.Add(".IVF", "video/x-ivf");
			mappings.Add(".jar", "application/java-archive");
			mappings.Add(".java", "application/octet-stream");
			mappings.Add(".jck", "application/liquidmotion");
			mappings.Add(".jcz", "application/liquidmotion");
			mappings.Add(".jfif", "image/pjpeg");
			mappings.Add(".jnlp", "application/x-java-jnlp-file");
			mappings.Add(".jpb", "application/octet-stream");
			mappings.Add(".jpe", "image/jpeg");
			mappings.Add(".jpeg", "image/jpeg");
			mappings.Add(".jpg", "image/jpeg");
			mappings.Add(".js", "application/x-javascript");
			mappings.Add(".jsx", "text/jscript");
			mappings.Add(".jsxbin", "text/plain");
			mappings.Add(".latex", "application/x-latex");
			mappings.Add(".library-ms", "application/windows-library+xml");
			mappings.Add(".lit", "application/x-ms-reader");
			mappings.Add(".loadtest", "application/xml");
			mappings.Add(".lpk", "application/octet-stream");
			mappings.Add(".lsf", "video/x-la-asf");
			mappings.Add(".lst", "text/plain");
			mappings.Add(".lsx", "video/x-la-asf");
			mappings.Add(".lzh", "application/octet-stream");
			mappings.Add(".m13", "application/x-msmediaview");
			mappings.Add(".m14", "application/x-msmediaview");
			mappings.Add(".m1v", "video/mpeg");
			mappings.Add(".m2t", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".m2ts", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".m2v", "video/mpeg");
			mappings.Add(".m3u", "audio/x-mpegurl");
			mappings.Add(".m3u8", "audio/x-mpegurl");
			mappings.Add(".m4a", "audio/m4a");
			mappings.Add(".m4b", "audio/m4b");
			mappings.Add(".m4p", "audio/m4p");
			mappings.Add(".m4r", "audio/x-m4r");
			mappings.Add(".m4v", "video/x-m4v");
			mappings.Add(".mac", "image/x-macpaint");
			mappings.Add(".mak", "text/plain");
			mappings.Add(".man", "application/x-troff-man");
			mappings.Add(".manifest", "application/x-ms-manifest");
			mappings.Add(".map", "text/plain");
			mappings.Add(".master", "application/xml");
			mappings.Add(".mda", "application/msaccess");
			mappings.Add(".mdb", "application/x-msaccess");
			mappings.Add(".mde", "application/msaccess");
			mappings.Add(".mdp", "application/octet-stream");
			mappings.Add(".me", "application/x-troff-me");
			mappings.Add(".mfp", "application/x-shockwave-flash");
			mappings.Add(".mht", "message/rfc822");
			mappings.Add(".mhtml", "message/rfc822");
			mappings.Add(".mid", "audio/mid");
			mappings.Add(".midi", "audio/mid");
			mappings.Add(".mix", "application/octet-stream");
			mappings.Add(".mk", "text/plain");
			mappings.Add(".mmf", "application/x-smaf");
			mappings.Add(".mno", "text/xml");
			mappings.Add(".mny", "application/x-msmoney");
			mappings.Add(".mod", "video/mpeg");
			mappings.Add(".mov", "video/quicktime");
			mappings.Add(".movie", "video/x-sgi-movie");
			mappings.Add(".mp2", "video/mpeg");
			mappings.Add(".mp2v", "video/mpeg");
			mappings.Add(".mp3", "audio/mpeg");
			mappings.Add(".mp4", "video/mp4");
			mappings.Add(".mp4v", "video/mp4");
			mappings.Add(".mpa", "video/mpeg");
			mappings.Add(".mpe", "video/mpeg");
			mappings.Add(".mpeg", "video/mpeg");
			mappings.Add(".mpf", "application/vnd.ms-mediapackage");
			mappings.Add(".mpg", "video/mpeg");
			mappings.Add(".mpp", "application/vnd.ms-project");
			mappings.Add(".mpv2", "video/mpeg");
			mappings.Add(".mqv", "video/quicktime");
			mappings.Add(".ms", "application/x-troff-ms");
			mappings.Add(".msi", "application/octet-stream");
			mappings.Add(".mso", "application/octet-stream");
			mappings.Add(".mts", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".mtx", "application/xml");
			mappings.Add(".mvb", "application/x-msmediaview");
			mappings.Add(".mvc", "application/x-miva-compiled");
			mappings.Add(".mxp", "application/x-mmxp");
			mappings.Add(".nc", "application/x-netcdf");
			mappings.Add(".nsc", "video/x-ms-asf");
			mappings.Add(".nws", "message/rfc822");
			mappings.Add(".ocx", "application/octet-stream");
			mappings.Add(".oda", "application/oda");
			mappings.Add(".odc", "text/x-ms-odc");
			mappings.Add(".odh", "text/plain");
			mappings.Add(".odl", "text/plain");
			mappings.Add(".odp", "application/vnd.oasis.opendocument.presentation");
			mappings.Add(".ods", "application/oleobject");
			mappings.Add(".odt", "application/vnd.oasis.opendocument.text");
			mappings.Add(".one", "application/onenote");
			mappings.Add(".onea", "application/onenote");
			mappings.Add(".onepkg", "application/onenote");
			mappings.Add(".onetmp", "application/onenote");
			mappings.Add(".onetoc", "application/onenote");
			mappings.Add(".onetoc2", "application/onenote");
			mappings.Add(".orderedtest", "application/xml");
			mappings.Add(".osdx", "application/opensearchdescription+xml");
			mappings.Add(".p10", "application/pkcs10");
			mappings.Add(".p12", "application/x-pkcs12");
			mappings.Add(".p7b", "application/x-pkcs7-certificates");
			mappings.Add(".p7c", "application/pkcs7-mime");
			mappings.Add(".p7m", "application/pkcs7-mime");
			mappings.Add(".p7r", "application/x-pkcs7-certreqresp");
			mappings.Add(".p7s", "application/pkcs7-signature");
			mappings.Add(".pbm", "image/x-portable-bitmap");
			mappings.Add(".pcast", "application/x-podcast");
			mappings.Add(".pct", "image/pict");
			mappings.Add(".pcx", "application/octet-stream");
			mappings.Add(".pcz", "application/octet-stream");
			mappings.Add(".pdf", "application/pdf");
			mappings.Add(".pfb", "application/octet-stream");
			mappings.Add(".pfm", "application/octet-stream");
			mappings.Add(".pfx", "application/x-pkcs12");
			mappings.Add(".pgm", "image/x-portable-graymap");
			mappings.Add(".pic", "image/pict");
			mappings.Add(".pict", "image/pict");
			mappings.Add(".pkgdef", "text/plain");
			mappings.Add(".pkgundef", "text/plain");
			mappings.Add(".pko", "application/vnd.ms-pki.pko");
			mappings.Add(".pls", "audio/scpls");
			mappings.Add(".pma", "application/x-perfmon");
			mappings.Add(".pmc", "application/x-perfmon");
			mappings.Add(".pml", "application/x-perfmon");
			mappings.Add(".pmr", "application/x-perfmon");
			mappings.Add(".pmw", "application/x-perfmon");
			mappings.Add(".png", "image/png");
			mappings.Add(".pnm", "image/x-portable-anymap");
			mappings.Add(".pnt", "image/x-macpaint");
			mappings.Add(".pntg", "image/x-macpaint");
			mappings.Add(".pnz", "image/png");
			mappings.Add(".pot", "application/vnd.ms-powerpoint");
			mappings.Add(".potm", "application/vnd.ms-powerpoint.template.macroEnabled.12");
			mappings.Add(".potx", "application/vnd.openxmlformats-officedocument.presentationml.template");
			mappings.Add(".ppa", "application/vnd.ms-powerpoint");
			mappings.Add(".ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12");
			mappings.Add(".ppm", "image/x-portable-pixmap");
			mappings.Add(".pps", "application/vnd.ms-powerpoint");
			mappings.Add(".ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12");
			mappings.Add(".ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow");
			mappings.Add(".ppt", "application/vnd.ms-powerpoint");
			mappings.Add(".pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12");
			mappings.Add(".pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation");
			mappings.Add(".prf", "application/pics-rules");
			mappings.Add(".prm", "application/octet-stream");
			mappings.Add(".prx", "application/octet-stream");
			mappings.Add(".ps", "application/postscript");
			mappings.Add(".psc1", "application/PowerShell");
			mappings.Add(".psd", "application/octet-stream");
			mappings.Add(".psess", "application/xml");
			mappings.Add(".psm", "application/octet-stream");
			mappings.Add(".psp", "application/octet-stream");
			mappings.Add(".pub", "application/x-mspublisher");
			mappings.Add(".pwz", "application/vnd.ms-powerpoint");
			mappings.Add(".qht", "text/x-html-insertion");
			mappings.Add(".qhtm", "text/x-html-insertion");
			mappings.Add(".qt", "video/quicktime");
			mappings.Add(".qti", "image/x-quicktime");
			mappings.Add(".qtif", "image/x-quicktime");
			mappings.Add(".qtl", "application/x-quicktimeplayer");
			mappings.Add(".qxd", "application/octet-stream");
			mappings.Add(".ra", "audio/x-pn-realaudio");
			mappings.Add(".ram", "audio/x-pn-realaudio");
			mappings.Add(".rar", "application/octet-stream");
			mappings.Add(".ras", "image/x-cmu-raster");
			mappings.Add(".rat", "application/rat-file");
			mappings.Add(".rc", "text/plain");
			mappings.Add(".rc2", "text/plain");
			mappings.Add(".rct", "text/plain");
			mappings.Add(".rdlc", "application/xml");
			mappings.Add(".resx", "application/xml");
			mappings.Add(".rf", "image/vnd.rn-realflash");
			mappings.Add(".rgb", "image/x-rgb");
			mappings.Add(".rgs", "text/plain");
			mappings.Add(".rm", "application/vnd.rn-realmedia");
			mappings.Add(".rmi", "audio/mid");
			mappings.Add(".rmp", "application/vnd.rn-rn_music_package");
			mappings.Add(".roff", "application/x-troff");
			mappings.Add(".rpm", "audio/x-pn-realaudio-plugin");
			mappings.Add(".rqy", "text/x-ms-rqy");
			mappings.Add(".rtf", "application/rtf");
			mappings.Add(".rtx", "text/richtext");
			mappings.Add(".ruleset", "application/xml");
			mappings.Add(".s", "text/plain");
			mappings.Add(".safariextz", "application/x-safari-safariextz");
			mappings.Add(".scd", "application/x-msschedule");
			mappings.Add(".sct", "text/scriptlet");
			mappings.Add(".sd2", "audio/x-sd2");
			mappings.Add(".sdp", "application/sdp");
			mappings.Add(".sea", "application/octet-stream");
			mappings.Add(".searchConnector-ms", "application/windows-search-connector+xml");
			mappings.Add(".setpay", "application/set-payment-initiation");
			mappings.Add(".setreg", "application/set-registration-initiation");
			mappings.Add(".settings", "application/xml");
			mappings.Add(".sgimb", "application/x-sgimb");
			mappings.Add(".sgml", "text/sgml");
			mappings.Add(".sh", "application/x-sh");
			mappings.Add(".shar", "application/x-shar");
			mappings.Add(".shtml", "text/html");
			mappings.Add(".sit", "application/x-stuffit");
			mappings.Add(".sitemap", "application/xml");
			mappings.Add(".skin", "application/xml");
			mappings.Add(".sldm", "application/vnd.ms-powerpoint.slide.macroEnabled.12");
			mappings.Add(".sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide");
			mappings.Add(".slk", "application/vnd.ms-excel");
			mappings.Add(".sln", "text/plain");
			mappings.Add(".slupkg-ms", "application/x-ms-license");
			mappings.Add(".smd", "audio/x-smd");
			mappings.Add(".smi", "application/octet-stream");
			mappings.Add(".smx", "audio/x-smd");
			mappings.Add(".smz", "audio/x-smd");
			mappings.Add(".snd", "audio/basic");
			mappings.Add(".snippet", "application/xml");
			mappings.Add(".snp", "application/octet-stream");
			mappings.Add(".sol", "text/plain");
			mappings.Add(".sor", "text/plain");
			mappings.Add(".spc", "application/x-pkcs7-certificates");
			mappings.Add(".spl", "application/futuresplash");
			mappings.Add(".src", "application/x-wais-source");
			mappings.Add(".srf", "text/plain");
			mappings.Add(".SSISDeploymentManifest", "text/xml");
			mappings.Add(".ssm", "application/streamingmedia");
			mappings.Add(".sst", "application/vnd.ms-pki.certstore");
			mappings.Add(".stl", "application/vnd.ms-pki.stl");
			mappings.Add(".sv4cpio", "application/x-sv4cpio");
			mappings.Add(".sv4crc", "application/x-sv4crc");
			mappings.Add(".svc", "application/xml");
			mappings.Add(".swf", "application/x-shockwave-flash");
			mappings.Add(".t", "application/x-troff");
			mappings.Add(".tar", "application/x-tar");
			mappings.Add(".tcl", "application/x-tcl");
			mappings.Add(".testrunconfig", "application/xml");
			mappings.Add(".testsettings", "application/xml");
			mappings.Add(".tex", "application/x-tex");
			mappings.Add(".texi", "application/x-texinfo");
			mappings.Add(".texinfo", "application/x-texinfo");
			mappings.Add(".tgz", "application/x-compressed");
			mappings.Add(".thmx", "application/vnd.ms-officetheme");
			mappings.Add(".thn", "application/octet-stream");
			mappings.Add(".tif", "image/tiff");
			mappings.Add(".tiff", "image/tiff");
			mappings.Add(".tlh", "text/plain");
			mappings.Add(".tli", "text/plain");
			mappings.Add(".toc", "application/octet-stream");
			mappings.Add(".tr", "application/x-troff");
			mappings.Add(".trm", "application/x-msterminal");
			mappings.Add(".trx", "application/xml");
			mappings.Add(".ts", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".tsv", "text/tab-separated-values");
			mappings.Add(".ttf", "application/octet-stream");
			mappings.Add(".tts", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".txt", "text/plain");
			mappings.Add(".u32", "application/octet-stream");
			mappings.Add(".uls", "text/iuls");
			mappings.Add(".user", "text/plain");
			mappings.Add(".ustar", "application/x-ustar");
			mappings.Add(".vb", "text/plain");
			mappings.Add(".vbdproj", "text/plain");
			mappings.Add(".vbk", "video/mpeg");
			mappings.Add(".vbproj", "text/plain");
			mappings.Add(".vbs", "text/vbscript");
			mappings.Add(".vcf", "text/x-vcard");
			mappings.Add(".vcproj", "Application/xml");
			mappings.Add(".vcs", "text/plain");
			mappings.Add(".vcxproj", "Application/xml");
			mappings.Add(".vddproj", "text/plain");
			mappings.Add(".vdp", "text/plain");
			mappings.Add(".vdproj", "text/plain");
			mappings.Add(".vdx", "application/vnd.ms-visio.viewer");
			mappings.Add(".vml", "text/xml");
			mappings.Add(".vscontent", "application/xml");
			mappings.Add(".vsct", "text/xml");
			mappings.Add(".vsd", "application/vnd.visio");
			mappings.Add(".vsi", "application/ms-vsi");
			mappings.Add(".vsix", "application/vsix");
			mappings.Add(".vsixlangpack", "text/xml");
			mappings.Add(".vsixmanifest", "text/xml");
			mappings.Add(".vsmdi", "application/xml");
			mappings.Add(".vspscc", "text/plain");
			mappings.Add(".vss", "application/vnd.visio");
			mappings.Add(".vsscc", "text/plain");
			mappings.Add(".vssettings", "text/xml");
			mappings.Add(".vssscc", "text/plain");
			mappings.Add(".vst", "application/vnd.visio");
			mappings.Add(".vstemplate", "text/xml");
			mappings.Add(".vsto", "application/x-ms-vsto");
			mappings.Add(".vsw", "application/vnd.visio");
			mappings.Add(".vsx", "application/vnd.visio");
			mappings.Add(".vtx", "application/vnd.visio");
			mappings.Add(".wav", "audio/wav");
			mappings.Add(".wave", "audio/wav");
			mappings.Add(".wax", "audio/x-ms-wax");
			mappings.Add(".wbk", "application/msword");
			mappings.Add(".wbmp", "image/vnd.wap.wbmp");
			mappings.Add(".wcm", "application/vnd.ms-works");
			mappings.Add(".wdb", "application/vnd.ms-works");
			mappings.Add(".wdp", "image/vnd.ms-photo");
			mappings.Add(".webarchive", "application/x-safari-webarchive");
			mappings.Add(".webtest", "application/xml");
			mappings.Add(".wiq", "application/xml");
			mappings.Add(".wiz", "application/msword");
			mappings.Add(".wks", "application/vnd.ms-works");
			mappings.Add(".WLMP", "application/wlmoviemaker");
			mappings.Add(".wlpginstall", "application/x-wlpg-detect");
			mappings.Add(".wlpginstall3", "application/x-wlpg3-detect");
			mappings.Add(".wm", "video/x-ms-wm");
			mappings.Add(".wma", "audio/x-ms-wma");
			mappings.Add(".wmd", "application/x-ms-wmd");
			mappings.Add(".wmf", "application/x-msmetafile");
			mappings.Add(".wml", "text/vnd.wap.wml");
			mappings.Add(".wmlc", "application/vnd.wap.wmlc");
			mappings.Add(".wmls", "text/vnd.wap.wmlscript");
			mappings.Add(".wmlsc", "application/vnd.wap.wmlscriptc");
			mappings.Add(".wmp", "video/x-ms-wmp");
			mappings.Add(".wmv", "video/x-ms-wmv");
			mappings.Add(".wmx", "video/x-ms-wmx");
			mappings.Add(".wmz", "application/x-ms-wmz");
			mappings.Add(".wpl", "application/vnd.ms-wpl");
			mappings.Add(".wps", "application/vnd.ms-works");
			mappings.Add(".wri", "application/x-mswrite");
			mappings.Add(".wrl", "x-world/x-vrml");
			mappings.Add(".wrz", "x-world/x-vrml");
			mappings.Add(".wsc", "text/scriptlet");
			mappings.Add(".wsdl", "text/xml");
			mappings.Add(".wvx", "video/x-ms-wvx");
			mappings.Add(".x", "application/directx");
			mappings.Add(".xaf", "x-world/x-vrml");
			mappings.Add(".xaml", "application/xaml+xml");
			mappings.Add(".xap", "application/x-silverlight-app");
			mappings.Add(".xbap", "application/x-ms-xbap");
			mappings.Add(".xbm", "image/x-xbitmap");
			mappings.Add(".xdr", "text/plain");
			mappings.Add(".xht", "application/xhtml+xml");
			mappings.Add(".xhtml", "application/xhtml+xml");
			mappings.Add(".xla", "application/vnd.ms-excel");
			mappings.Add(".xlam", "application/vnd.ms-excel.addin.macroEnabled.12");
			mappings.Add(".xlc", "application/vnd.ms-excel");
			mappings.Add(".xld", "application/vnd.ms-excel");
			mappings.Add(".xlk", "application/vnd.ms-excel");
			mappings.Add(".xll", "application/vnd.ms-excel");
			mappings.Add(".xlm", "application/vnd.ms-excel");
			mappings.Add(".xls", "application/vnd.ms-excel");
			mappings.Add(".xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12");
			mappings.Add(".xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12");
			mappings.Add(".xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
			mappings.Add(".xlt", "application/vnd.ms-excel");
			mappings.Add(".xltm", "application/vnd.ms-excel.template.macroEnabled.12");
			mappings.Add(".xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template");
			mappings.Add(".xlw", "application/vnd.ms-excel");
			mappings.Add(".xml", "text/xml");
			mappings.Add(".xmta", "application/xml");
			mappings.Add(".xof", "x-world/x-vrml");
			mappings.Add(".XOML", "text/plain");
			mappings.Add(".xpm", "image/x-xpixmap");
			mappings.Add(".xps", "application/vnd.ms-xpsdocument");
			mappings.Add(".xrm-ms", "text/xml");
			mappings.Add(".xsc", "application/xml");
			mappings.Add(".xsd", "text/xml");
			mappings.Add(".xsf", "text/xml");
			mappings.Add(".xsl", "text/xml");
			mappings.Add(".xslt", "text/xml");
			mappings.Add(".xsn", "application/octet-stream");
			mappings.Add(".xss", "application/xml");
			mappings.Add(".xtp", "application/octet-stream");
			mappings.Add(".xwd", "image/x-xwindowdump");
			mappings.Add(".z", "application/x-compress");
			mappings.Add(".zip", "application/x-zip-compressed");
			#endregion
			var m = mappings.FirstOrDefault(x => x.Value == mimetype);
			return m.Key != null ? m.Key : "";
		}

		/// <summary>
		/// Returns the MIME type associated with a given file extension.
		/// </summary>
		/// <param name="extension">File extension.</param>
		/// <returns>MIME type.</returns>
		public static string GetMimeType(this string extension) {
			Dictionary<string, string> mappings = new Dictionary<string, string>();
			#region
			mappings.Add(".323", "text/h323");
			mappings.Add(".3g2", "video/3gpp2");
			mappings.Add(".3gp", "video/3gpp");
			mappings.Add(".3gp2", "video/3gpp2");
			mappings.Add(".3gpp", "video/3gpp");
			mappings.Add(".7z", "application/x-7z-compressed");
			mappings.Add(".aa", "audio/audible");
			mappings.Add(".AAC", "audio/aac");
			mappings.Add(".aaf", "application/octet-stream");
			mappings.Add(".aax", "audio/vnd.audible.aax");
			mappings.Add(".ac3", "audio/ac3");
			mappings.Add(".aca", "application/octet-stream");
			mappings.Add(".accda", "application/msaccess.addin");
			mappings.Add(".accdb", "application/msaccess");
			mappings.Add(".accdc", "application/msaccess.cab");
			mappings.Add(".accde", "application/msaccess");
			mappings.Add(".accdr", "application/msaccess.runtime");
			mappings.Add(".accdt", "application/msaccess");
			mappings.Add(".accdw", "application/msaccess.webapplication");
			mappings.Add(".accft", "application/msaccess.ftemplate");
			mappings.Add(".acx", "application/internet-property-stream");
			mappings.Add(".AddIn", "text/xml");
			mappings.Add(".ade", "application/msaccess");
			mappings.Add(".adobebridge", "application/x-bridge-url");
			mappings.Add(".adp", "application/msaccess");
			mappings.Add(".ADT", "audio/vnd.dlna.adts");
			mappings.Add(".ADTS", "audio/aac");
			mappings.Add(".afm", "application/octet-stream");
			mappings.Add(".ai", "application/postscript");
			mappings.Add(".aif", "audio/x-aiff");
			mappings.Add(".aifc", "audio/aiff");
			mappings.Add(".aiff", "audio/aiff");
			mappings.Add(".air", "application/vnd.adobe.air-application-installer-package+zip");
			mappings.Add(".amc", "application/x-mpeg");
			mappings.Add(".application", "application/x-ms-application");
			mappings.Add(".art", "image/x-jg");
			mappings.Add(".asa", "application/xml");
			mappings.Add(".asax", "application/xml");
			mappings.Add(".ascx", "application/xml");
			mappings.Add(".asd", "application/octet-stream");
			mappings.Add(".asf", "video/x-ms-asf");
			mappings.Add(".ashx", "application/xml");
			mappings.Add(".asi", "application/octet-stream");
			mappings.Add(".asm", "text/plain");
			mappings.Add(".asmx", "application/xml");
			mappings.Add(".aspx", "application/xml");
			mappings.Add(".asr", "video/x-ms-asf");
			mappings.Add(".asx", "video/x-ms-asf");
			mappings.Add(".atom", "application/atom+xml");
			mappings.Add(".au", "audio/basic");
			mappings.Add(".avi", "video/x-msvideo");
			mappings.Add(".axs", "application/olescript");
			mappings.Add(".bas", "text/plain");
			mappings.Add(".bcpio", "application/x-bcpio");
			mappings.Add(".bin", "application/octet-stream");
			mappings.Add(".bmp", "image/bmp");
			mappings.Add(".c", "text/plain");
			mappings.Add(".cab", "application/octet-stream");
			mappings.Add(".caf", "audio/x-caf");
			mappings.Add(".calx", "application/vnd.ms-office.calx");
			mappings.Add(".cat", "application/vnd.ms-pki.seccat");
			mappings.Add(".cc", "text/plain");
			mappings.Add(".cd", "text/plain");
			mappings.Add(".cdda", "audio/aiff");
			mappings.Add(".cdf", "application/x-cdf");
			mappings.Add(".cer", "application/x-x509-ca-cert");
			mappings.Add(".chm", "application/octet-stream");
			mappings.Add(".class", "application/x-java-applet");
			mappings.Add(".clp", "application/x-msclip");
			mappings.Add(".cmx", "image/x-cmx");
			mappings.Add(".cnf", "text/plain");
			mappings.Add(".cod", "image/cis-cod");
			mappings.Add(".config", "application/xml");
			mappings.Add(".contact", "text/x-ms-contact");
			mappings.Add(".coverage", "application/xml");
			mappings.Add(".cpio", "application/x-cpio");
			mappings.Add(".cpp", "text/plain");
			mappings.Add(".crd", "application/x-mscardfile");
			mappings.Add(".crl", "application/pkix-crl");
			mappings.Add(".crt", "application/x-x509-ca-cert");
			mappings.Add(".cs", "text/plain");
			mappings.Add(".csdproj", "text/plain");
			mappings.Add(".csh", "application/x-csh");
			mappings.Add(".csproj", "text/plain");
			mappings.Add(".css", "text/css");
			mappings.Add(".csv", "application/octet-stream");
			mappings.Add(".cur", "application/octet-stream");
			mappings.Add(".cxx", "text/plain");
			mappings.Add(".dat", "application/octet-stream");
			mappings.Add(".datasource", "application/xml");
			mappings.Add(".dbproj", "text/plain");
			mappings.Add(".dcr", "application/x-director");
			mappings.Add(".def", "text/plain");
			mappings.Add(".deploy", "application/octet-stream");
			mappings.Add(".der", "application/x-x509-ca-cert");
			mappings.Add(".dgml", "application/xml");
			mappings.Add(".dib", "image/bmp");
			mappings.Add(".dif", "video/x-dv");
			mappings.Add(".dir", "application/x-director");
			mappings.Add(".disco", "text/xml");
			mappings.Add(".dll", "application/x-msdownload");
			mappings.Add(".dll.config", "text/xml");
			mappings.Add(".dlm", "text/dlm");
			mappings.Add(".doc", "application/msword");
			mappings.Add(".docm", "application/vnd.ms-word.document.macroEnabled.12");
			mappings.Add(".docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document");
			mappings.Add(".dot", "application/msword");
			mappings.Add(".dotm", "application/vnd.ms-word.template.macroEnabled.12");
			mappings.Add(".dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template");
			mappings.Add(".dsp", "application/octet-stream");
			mappings.Add(".dsw", "text/plain");
			mappings.Add(".dtd", "text/xml");
			mappings.Add(".dtsConfig", "text/xml");
			mappings.Add(".dv", "video/x-dv");
			mappings.Add(".dvi", "application/x-dvi");
			mappings.Add(".dwf", "drawing/x-dwf");
			mappings.Add(".dwp", "application/octet-stream");
			mappings.Add(".dxr", "application/x-director");
			mappings.Add(".eml", "message/rfc822");
			mappings.Add(".emz", "application/octet-stream");
			mappings.Add(".eot", "application/octet-stream");
			mappings.Add(".eps", "application/postscript");
			mappings.Add(".etl", "application/etl");
			mappings.Add(".etx", "text/x-setext");
			mappings.Add(".evy", "application/envoy");
			mappings.Add(".exe", "application/octet-stream");
			mappings.Add(".exe.config", "text/xml");
			mappings.Add(".fdf", "application/vnd.fdf");
			mappings.Add(".fif", "application/fractals");
			mappings.Add(".filters", "Application/xml");
			mappings.Add(".fla", "application/octet-stream");
			mappings.Add(".flr", "x-world/x-vrml");
			mappings.Add(".flv", "video/x-flv");
			mappings.Add(".fsscript", "application/fsharp-script");
			mappings.Add(".fsx", "application/fsharp-script");
			mappings.Add(".generictest", "application/xml");
			mappings.Add(".gif", "image/gif");
			mappings.Add(".group", "text/x-ms-group");
			mappings.Add(".gsm", "audio/x-gsm");
			mappings.Add(".gtar", "application/x-gtar");
			mappings.Add(".gz", "application/x-gzip");
			mappings.Add(".h", "text/plain");
			mappings.Add(".hdf", "application/x-hdf");
			mappings.Add(".hdml", "text/x-hdml");
			mappings.Add(".hhc", "application/x-oleobject");
			mappings.Add(".hhk", "application/octet-stream");
			mappings.Add(".hhp", "application/octet-stream");
			mappings.Add(".hlp", "application/winhlp");
			mappings.Add(".hpp", "text/plain");
			mappings.Add(".hqx", "application/mac-binhex40");
			mappings.Add(".hta", "application/hta");
			mappings.Add(".htc", "text/x-component");
			mappings.Add(".htm", "text/html");
			mappings.Add(".html", "text/html");
			mappings.Add(".htt", "text/webviewhtml");
			mappings.Add(".hxa", "application/xml");
			mappings.Add(".hxc", "application/xml");
			mappings.Add(".hxd", "application/octet-stream");
			mappings.Add(".hxe", "application/xml");
			mappings.Add(".hxf", "application/xml");
			mappings.Add(".hxh", "application/octet-stream");
			mappings.Add(".hxi", "application/octet-stream");
			mappings.Add(".hxk", "application/xml");
			mappings.Add(".hxq", "application/octet-stream");
			mappings.Add(".hxr", "application/octet-stream");
			mappings.Add(".hxs", "application/octet-stream");
			mappings.Add(".hxt", "text/html");
			mappings.Add(".hxv", "application/xml");
			mappings.Add(".hxw", "application/octet-stream");
			mappings.Add(".hxx", "text/plain");
			mappings.Add(".i", "text/plain");
			mappings.Add(".ico", "image/x-icon");
			mappings.Add(".ics", "application/octet-stream");
			mappings.Add(".idl", "text/plain");
			mappings.Add(".ief", "image/ief");
			mappings.Add(".iii", "application/x-iphone");
			mappings.Add(".inc", "text/plain");
			mappings.Add(".inf", "application/octet-stream");
			mappings.Add(".inl", "text/plain");
			mappings.Add(".ins", "application/x-internet-signup");
			mappings.Add(".ipa", "application/x-itunes-ipa");
			mappings.Add(".ipg", "application/x-itunes-ipg");
			mappings.Add(".ipproj", "text/plain");
			mappings.Add(".ipsw", "application/x-itunes-ipsw");
			mappings.Add(".iqy", "text/x-ms-iqy");
			mappings.Add(".isp", "application/x-internet-signup");
			mappings.Add(".ite", "application/x-itunes-ite");
			mappings.Add(".itlp", "application/x-itunes-itlp");
			mappings.Add(".itms", "application/x-itunes-itms");
			mappings.Add(".itpc", "application/x-itunes-itpc");
			mappings.Add(".IVF", "video/x-ivf");
			mappings.Add(".jar", "application/java-archive");
			mappings.Add(".java", "application/octet-stream");
			mappings.Add(".jck", "application/liquidmotion");
			mappings.Add(".jcz", "application/liquidmotion");
			mappings.Add(".jfif", "image/pjpeg");
			mappings.Add(".jnlp", "application/x-java-jnlp-file");
			mappings.Add(".jpb", "application/octet-stream");
			mappings.Add(".jpe", "image/jpeg");
			mappings.Add(".jpeg", "image/jpeg");
			mappings.Add(".jpg", "image/jpeg");
			mappings.Add(".js", "application/x-javascript");
			mappings.Add(".jsx", "text/jscript");
			mappings.Add(".jsxbin", "text/plain");
			mappings.Add(".latex", "application/x-latex");
			mappings.Add(".library-ms", "application/windows-library+xml");
			mappings.Add(".lit", "application/x-ms-reader");
			mappings.Add(".loadtest", "application/xml");
			mappings.Add(".lpk", "application/octet-stream");
			mappings.Add(".lsf", "video/x-la-asf");
			mappings.Add(".lst", "text/plain");
			mappings.Add(".lsx", "video/x-la-asf");
			mappings.Add(".lzh", "application/octet-stream");
			mappings.Add(".m13", "application/x-msmediaview");
			mappings.Add(".m14", "application/x-msmediaview");
			mappings.Add(".m1v", "video/mpeg");
			mappings.Add(".m2t", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".m2ts", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".m2v", "video/mpeg");
			mappings.Add(".m3u", "audio/x-mpegurl");
			mappings.Add(".m3u8", "audio/x-mpegurl");
			mappings.Add(".m4a", "audio/m4a");
			mappings.Add(".m4b", "audio/m4b");
			mappings.Add(".m4p", "audio/m4p");
			mappings.Add(".m4r", "audio/x-m4r");
			mappings.Add(".m4v", "video/x-m4v");
			mappings.Add(".mac", "image/x-macpaint");
			mappings.Add(".mak", "text/plain");
			mappings.Add(".man", "application/x-troff-man");
			mappings.Add(".manifest", "application/x-ms-manifest");
			mappings.Add(".map", "text/plain");
			mappings.Add(".master", "application/xml");
			mappings.Add(".mda", "application/msaccess");
			mappings.Add(".mdb", "application/x-msaccess");
			mappings.Add(".mde", "application/msaccess");
			mappings.Add(".mdp", "application/octet-stream");
			mappings.Add(".me", "application/x-troff-me");
			mappings.Add(".mfp", "application/x-shockwave-flash");
			mappings.Add(".mht", "message/rfc822");
			mappings.Add(".mhtml", "message/rfc822");
			mappings.Add(".mid", "audio/mid");
			mappings.Add(".midi", "audio/mid");
			mappings.Add(".mix", "application/octet-stream");
			mappings.Add(".mk", "text/plain");
			mappings.Add(".mmf", "application/x-smaf");
			mappings.Add(".mno", "text/xml");
			mappings.Add(".mny", "application/x-msmoney");
			mappings.Add(".mod", "video/mpeg");
			mappings.Add(".mov", "video/quicktime");
			mappings.Add(".movie", "video/x-sgi-movie");
			mappings.Add(".mp2", "video/mpeg");
			mappings.Add(".mp2v", "video/mpeg");
			mappings.Add(".mp3", "audio/mpeg");
			mappings.Add(".mp4", "video/mp4");
			mappings.Add(".mp4v", "video/mp4");
			mappings.Add(".mpa", "video/mpeg");
			mappings.Add(".mpe", "video/mpeg");
			mappings.Add(".mpeg", "video/mpeg");
			mappings.Add(".mpf", "application/vnd.ms-mediapackage");
			mappings.Add(".mpg", "video/mpeg");
			mappings.Add(".mpp", "application/vnd.ms-project");
			mappings.Add(".mpv2", "video/mpeg");
			mappings.Add(".mqv", "video/quicktime");
			mappings.Add(".ms", "application/x-troff-ms");
			mappings.Add(".msi", "application/octet-stream");
			mappings.Add(".mso", "application/octet-stream");
			mappings.Add(".mts", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".mtx", "application/xml");
			mappings.Add(".mvb", "application/x-msmediaview");
			mappings.Add(".mvc", "application/x-miva-compiled");
			mappings.Add(".mxp", "application/x-mmxp");
			mappings.Add(".nc", "application/x-netcdf");
			mappings.Add(".nsc", "video/x-ms-asf");
			mappings.Add(".nws", "message/rfc822");
			mappings.Add(".ocx", "application/octet-stream");
			mappings.Add(".oda", "application/oda");
			mappings.Add(".odc", "text/x-ms-odc");
			mappings.Add(".odh", "text/plain");
			mappings.Add(".odl", "text/plain");
			mappings.Add(".odp", "application/vnd.oasis.opendocument.presentation");
			mappings.Add(".ods", "application/oleobject");
			mappings.Add(".odt", "application/vnd.oasis.opendocument.text");
			mappings.Add(".one", "application/onenote");
			mappings.Add(".onea", "application/onenote");
			mappings.Add(".onepkg", "application/onenote");
			mappings.Add(".onetmp", "application/onenote");
			mappings.Add(".onetoc", "application/onenote");
			mappings.Add(".onetoc2", "application/onenote");
			mappings.Add(".orderedtest", "application/xml");
			mappings.Add(".osdx", "application/opensearchdescription+xml");
			mappings.Add(".p10", "application/pkcs10");
			mappings.Add(".p12", "application/x-pkcs12");
			mappings.Add(".p7b", "application/x-pkcs7-certificates");
			mappings.Add(".p7c", "application/pkcs7-mime");
			mappings.Add(".p7m", "application/pkcs7-mime");
			mappings.Add(".p7r", "application/x-pkcs7-certreqresp");
			mappings.Add(".p7s", "application/pkcs7-signature");
			mappings.Add(".pbm", "image/x-portable-bitmap");
			mappings.Add(".pcast", "application/x-podcast");
			mappings.Add(".pct", "image/pict");
			mappings.Add(".pcx", "application/octet-stream");
			mappings.Add(".pcz", "application/octet-stream");
			mappings.Add(".pdf", "application/pdf");
			mappings.Add(".pfb", "application/octet-stream");
			mappings.Add(".pfm", "application/octet-stream");
			mappings.Add(".pfx", "application/x-pkcs12");
			mappings.Add(".pgm", "image/x-portable-graymap");
			mappings.Add(".pic", "image/pict");
			mappings.Add(".pict", "image/pict");
			mappings.Add(".pkgdef", "text/plain");
			mappings.Add(".pkgundef", "text/plain");
			mappings.Add(".pko", "application/vnd.ms-pki.pko");
			mappings.Add(".pls", "audio/scpls");
			mappings.Add(".pma", "application/x-perfmon");
			mappings.Add(".pmc", "application/x-perfmon");
			mappings.Add(".pml", "application/x-perfmon");
			mappings.Add(".pmr", "application/x-perfmon");
			mappings.Add(".pmw", "application/x-perfmon");
			mappings.Add(".png", "image/png");
			mappings.Add(".pnm", "image/x-portable-anymap");
			mappings.Add(".pnt", "image/x-macpaint");
			mappings.Add(".pntg", "image/x-macpaint");
			mappings.Add(".pnz", "image/png");
			mappings.Add(".pot", "application/vnd.ms-powerpoint");
			mappings.Add(".potm", "application/vnd.ms-powerpoint.template.macroEnabled.12");
			mappings.Add(".potx", "application/vnd.openxmlformats-officedocument.presentationml.template");
			mappings.Add(".ppa", "application/vnd.ms-powerpoint");
			mappings.Add(".ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12");
			mappings.Add(".ppm", "image/x-portable-pixmap");
			mappings.Add(".pps", "application/vnd.ms-powerpoint");
			mappings.Add(".ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12");
			mappings.Add(".ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow");
			mappings.Add(".ppt", "application/vnd.ms-powerpoint");
			mappings.Add(".pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12");
			mappings.Add(".pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation");
			mappings.Add(".prf", "application/pics-rules");
			mappings.Add(".prm", "application/octet-stream");
			mappings.Add(".prx", "application/octet-stream");
			mappings.Add(".ps", "application/postscript");
			mappings.Add(".psc1", "application/PowerShell");
			mappings.Add(".psd", "application/octet-stream");
			mappings.Add(".psess", "application/xml");
			mappings.Add(".psm", "application/octet-stream");
			mappings.Add(".psp", "application/octet-stream");
			mappings.Add(".pub", "application/x-mspublisher");
			mappings.Add(".pwz", "application/vnd.ms-powerpoint");
			mappings.Add(".qht", "text/x-html-insertion");
			mappings.Add(".qhtm", "text/x-html-insertion");
			mappings.Add(".qt", "video/quicktime");
			mappings.Add(".qti", "image/x-quicktime");
			mappings.Add(".qtif", "image/x-quicktime");
			mappings.Add(".qtl", "application/x-quicktimeplayer");
			mappings.Add(".qxd", "application/octet-stream");
			mappings.Add(".ra", "audio/x-pn-realaudio");
			mappings.Add(".ram", "audio/x-pn-realaudio");
			mappings.Add(".rar", "application/octet-stream");
			mappings.Add(".ras", "image/x-cmu-raster");
			mappings.Add(".rat", "application/rat-file");
			mappings.Add(".rc", "text/plain");
			mappings.Add(".rc2", "text/plain");
			mappings.Add(".rct", "text/plain");
			mappings.Add(".rdlc", "application/xml");
			mappings.Add(".resx", "application/xml");
			mappings.Add(".rf", "image/vnd.rn-realflash");
			mappings.Add(".rgb", "image/x-rgb");
			mappings.Add(".rgs", "text/plain");
			mappings.Add(".rm", "application/vnd.rn-realmedia");
			mappings.Add(".rmi", "audio/mid");
			mappings.Add(".rmp", "application/vnd.rn-rn_music_package");
			mappings.Add(".roff", "application/x-troff");
			mappings.Add(".rpm", "audio/x-pn-realaudio-plugin");
			mappings.Add(".rqy", "text/x-ms-rqy");
			mappings.Add(".rtf", "application/rtf");
			mappings.Add(".rtx", "text/richtext");
			mappings.Add(".ruleset", "application/xml");
			mappings.Add(".s", "text/plain");
			mappings.Add(".safariextz", "application/x-safari-safariextz");
			mappings.Add(".scd", "application/x-msschedule");
			mappings.Add(".sct", "text/scriptlet");
			mappings.Add(".sd2", "audio/x-sd2");
			mappings.Add(".sdp", "application/sdp");
			mappings.Add(".sea", "application/octet-stream");
			mappings.Add(".searchConnector-ms", "application/windows-search-connector+xml");
			mappings.Add(".setpay", "application/set-payment-initiation");
			mappings.Add(".setreg", "application/set-registration-initiation");
			mappings.Add(".settings", "application/xml");
			mappings.Add(".sgimb", "application/x-sgimb");
			mappings.Add(".sgml", "text/sgml");
			mappings.Add(".sh", "application/x-sh");
			mappings.Add(".shar", "application/x-shar");
			mappings.Add(".shtml", "text/html");
			mappings.Add(".sit", "application/x-stuffit");
			mappings.Add(".sitemap", "application/xml");
			mappings.Add(".skin", "application/xml");
			mappings.Add(".sldm", "application/vnd.ms-powerpoint.slide.macroEnabled.12");
			mappings.Add(".sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide");
			mappings.Add(".slk", "application/vnd.ms-excel");
			mappings.Add(".sln", "text/plain");
			mappings.Add(".slupkg-ms", "application/x-ms-license");
			mappings.Add(".smd", "audio/x-smd");
			mappings.Add(".smi", "application/octet-stream");
			mappings.Add(".smx", "audio/x-smd");
			mappings.Add(".smz", "audio/x-smd");
			mappings.Add(".snd", "audio/basic");
			mappings.Add(".snippet", "application/xml");
			mappings.Add(".snp", "application/octet-stream");
			mappings.Add(".sol", "text/plain");
			mappings.Add(".sor", "text/plain");
			mappings.Add(".spc", "application/x-pkcs7-certificates");
			mappings.Add(".spl", "application/futuresplash");
			mappings.Add(".src", "application/x-wais-source");
			mappings.Add(".srf", "text/plain");
			mappings.Add(".SSISDeploymentManifest", "text/xml");
			mappings.Add(".ssm", "application/streamingmedia");
			mappings.Add(".sst", "application/vnd.ms-pki.certstore");
			mappings.Add(".stl", "application/vnd.ms-pki.stl");
			mappings.Add(".sv4cpio", "application/x-sv4cpio");
			mappings.Add(".sv4crc", "application/x-sv4crc");
			mappings.Add(".svc", "application/xml");
			mappings.Add(".swf", "application/x-shockwave-flash");
			mappings.Add(".t", "application/x-troff");
			mappings.Add(".tar", "application/x-tar");
			mappings.Add(".tcl", "application/x-tcl");
			mappings.Add(".testrunconfig", "application/xml");
			mappings.Add(".testsettings", "application/xml");
			mappings.Add(".tex", "application/x-tex");
			mappings.Add(".texi", "application/x-texinfo");
			mappings.Add(".texinfo", "application/x-texinfo");
			mappings.Add(".tgz", "application/x-compressed");
			mappings.Add(".thmx", "application/vnd.ms-officetheme");
			mappings.Add(".thn", "application/octet-stream");
			mappings.Add(".tif", "image/tiff");
			mappings.Add(".tiff", "image/tiff");
			mappings.Add(".tlh", "text/plain");
			mappings.Add(".tli", "text/plain");
			mappings.Add(".toc", "application/octet-stream");
			mappings.Add(".tr", "application/x-troff");
			mappings.Add(".trm", "application/x-msterminal");
			mappings.Add(".trx", "application/xml");
			mappings.Add(".ts", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".tsv", "text/tab-separated-values");
			mappings.Add(".ttf", "application/octet-stream");
			mappings.Add(".tts", "video/vnd.dlna.mpeg-tts");
			mappings.Add(".txt", "text/plain");
			mappings.Add(".u32", "application/octet-stream");
			mappings.Add(".uls", "text/iuls");
			mappings.Add(".user", "text/plain");
			mappings.Add(".ustar", "application/x-ustar");
			mappings.Add(".vb", "text/plain");
			mappings.Add(".vbdproj", "text/plain");
			mappings.Add(".vbk", "video/mpeg");
			mappings.Add(".vbproj", "text/plain");
			mappings.Add(".vbs", "text/vbscript");
			mappings.Add(".vcf", "text/x-vcard");
			mappings.Add(".vcproj", "Application/xml");
			mappings.Add(".vcs", "text/plain");
			mappings.Add(".vcxproj", "Application/xml");
			mappings.Add(".vddproj", "text/plain");
			mappings.Add(".vdp", "text/plain");
			mappings.Add(".vdproj", "text/plain");
			mappings.Add(".vdx", "application/vnd.ms-visio.viewer");
			mappings.Add(".vml", "text/xml");
			mappings.Add(".vscontent", "application/xml");
			mappings.Add(".vsct", "text/xml");
			mappings.Add(".vsd", "application/vnd.visio");
			mappings.Add(".vsi", "application/ms-vsi");
			mappings.Add(".vsix", "application/vsix");
			mappings.Add(".vsixlangpack", "text/xml");
			mappings.Add(".vsixmanifest", "text/xml");
			mappings.Add(".vsmdi", "application/xml");
			mappings.Add(".vspscc", "text/plain");
			mappings.Add(".vss", "application/vnd.visio");
			mappings.Add(".vsscc", "text/plain");
			mappings.Add(".vssettings", "text/xml");
			mappings.Add(".vssscc", "text/plain");
			mappings.Add(".vst", "application/vnd.visio");
			mappings.Add(".vstemplate", "text/xml");
			mappings.Add(".vsto", "application/x-ms-vsto");
			mappings.Add(".vsw", "application/vnd.visio");
			mappings.Add(".vsx", "application/vnd.visio");
			mappings.Add(".vtx", "application/vnd.visio");
			mappings.Add(".wav", "audio/wav");
			mappings.Add(".wave", "audio/wav");
			mappings.Add(".wax", "audio/x-ms-wax");
			mappings.Add(".wbk", "application/msword");
			mappings.Add(".wbmp", "image/vnd.wap.wbmp");
			mappings.Add(".wcm", "application/vnd.ms-works");
			mappings.Add(".wdb", "application/vnd.ms-works");
			mappings.Add(".wdp", "image/vnd.ms-photo");
			mappings.Add(".webarchive", "application/x-safari-webarchive");
			mappings.Add(".webtest", "application/xml");
			mappings.Add(".wiq", "application/xml");
			mappings.Add(".wiz", "application/msword");
			mappings.Add(".wks", "application/vnd.ms-works");
			mappings.Add(".WLMP", "application/wlmoviemaker");
			mappings.Add(".wlpginstall", "application/x-wlpg-detect");
			mappings.Add(".wlpginstall3", "application/x-wlpg3-detect");
			mappings.Add(".wm", "video/x-ms-wm");
			mappings.Add(".wma", "audio/x-ms-wma");
			mappings.Add(".wmd", "application/x-ms-wmd");
			mappings.Add(".wmf", "application/x-msmetafile");
			mappings.Add(".wml", "text/vnd.wap.wml");
			mappings.Add(".wmlc", "application/vnd.wap.wmlc");
			mappings.Add(".wmls", "text/vnd.wap.wmlscript");
			mappings.Add(".wmlsc", "application/vnd.wap.wmlscriptc");
			mappings.Add(".wmp", "video/x-ms-wmp");
			mappings.Add(".wmv", "video/x-ms-wmv");
			mappings.Add(".wmx", "video/x-ms-wmx");
			mappings.Add(".wmz", "application/x-ms-wmz");
			mappings.Add(".wpl", "application/vnd.ms-wpl");
			mappings.Add(".wps", "application/vnd.ms-works");
			mappings.Add(".wri", "application/x-mswrite");
			mappings.Add(".wrl", "x-world/x-vrml");
			mappings.Add(".wrz", "x-world/x-vrml");
			mappings.Add(".wsc", "text/scriptlet");
			mappings.Add(".wsdl", "text/xml");
			mappings.Add(".wvx", "video/x-ms-wvx");
			mappings.Add(".x", "application/directx");
			mappings.Add(".xaf", "x-world/x-vrml");
			mappings.Add(".xaml", "application/xaml+xml");
			mappings.Add(".xap", "application/x-silverlight-app");
			mappings.Add(".xbap", "application/x-ms-xbap");
			mappings.Add(".xbm", "image/x-xbitmap");
			mappings.Add(".xdr", "text/plain");
			mappings.Add(".xht", "application/xhtml+xml");
			mappings.Add(".xhtml", "application/xhtml+xml");
			mappings.Add(".xla", "application/vnd.ms-excel");
			mappings.Add(".xlam", "application/vnd.ms-excel.addin.macroEnabled.12");
			mappings.Add(".xlc", "application/vnd.ms-excel");
			mappings.Add(".xld", "application/vnd.ms-excel");
			mappings.Add(".xlk", "application/vnd.ms-excel");
			mappings.Add(".xll", "application/vnd.ms-excel");
			mappings.Add(".xlm", "application/vnd.ms-excel");
			mappings.Add(".xls", "application/vnd.ms-excel");
			mappings.Add(".xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12");
			mappings.Add(".xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12");
			mappings.Add(".xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
			mappings.Add(".xlt", "application/vnd.ms-excel");
			mappings.Add(".xltm", "application/vnd.ms-excel.template.macroEnabled.12");
			mappings.Add(".xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template");
			mappings.Add(".xlw", "application/vnd.ms-excel");
			mappings.Add(".xml", "text/xml");
			mappings.Add(".xmta", "application/xml");
			mappings.Add(".xof", "x-world/x-vrml");
			mappings.Add(".XOML", "text/plain");
			mappings.Add(".xpm", "image/x-xpixmap");
			mappings.Add(".xps", "application/vnd.ms-xpsdocument");
			mappings.Add(".xrm-ms", "text/xml");
			mappings.Add(".xsc", "application/xml");
			mappings.Add(".xsd", "text/xml");
			mappings.Add(".xsf", "text/xml");
			mappings.Add(".xsl", "text/xml");
			mappings.Add(".xslt", "text/xml");
			mappings.Add(".xsn", "application/octet-stream");
			mappings.Add(".xss", "application/xml");
			mappings.Add(".xtp", "application/octet-stream");
			mappings.Add(".xwd", "image/x-xwindowdump");
			mappings.Add(".z", "application/x-compress");
			mappings.Add(".zip", "application/x-zip-compressed");
			#endregion
			var m = mappings.FirstOrDefault(x => x.Key == extension);
			return m.Value != null ? m.Value : "";
		}
		
		/// <summary>
		/// Removes invalid characters from a string.
		/// </summary>
		/// <param name="s">String to clean.</param>
		public static string Sanitize(this string s) {
			string invalidChars = Regex.Escape(new string(Path.GetInvalidFileNameChars()));
			string invalidReStr = string.Format(@"([{0}]*\.+$)|([{0}]+)", invalidChars);
			s = Regex.Replace(s, invalidReStr, "_");
			s = s.Replace("&", "_");
			return s;
		}

		/// <summary>
		/// Splits a string using a string delimiter.
		/// </summary>
		/// <param name="s">String to split.</param>
		/// <param name="delimiter">String delimiter.</param>
		public static string[] Split(this string s, string delimiter) {
			return s.Split(new string[] { delimiter }, StringSplitOptions.None);
		}

		/// <summary>
		/// Converts a string to a byte array.
		/// </summary>
		/// <param name="s">String to convert.</param>
		public static byte[] ToBytes(this string s) {
			byte[] bytes = new byte[s.Length * sizeof(char)];
			System.Buffer.BlockCopy(s.ToCharArray(), 0, bytes, 0, bytes.Length);
			return bytes;
		}

		/// <summary>
		/// Formats a string as a phone number.
		/// All non-numeric characters are removed.
		/// If the result has 7 characters, the phone number is formatted like "xxx-xxxx".
		/// If the result has 10 characters, the phone number is formatted like "(xxx) xxx-xxxx".
		/// If the result does not have 7 or 10 characters, null is returned.
		/// </summary>
		/// <param name="s">String to format.</param>
		public static string ToPhone(this string s) {
			s = Regex.Replace((s ?? ""), @"\D", "");
			if ((s ?? "").Length == 7)
				return s.Substring(0, 3) + "-" + s.Substring(3, 4);
			else if ((s ?? "").Length == 10)
				return "(" + s.Substring(0, 3) + ") " + s.Substring(3, 3) + "-" + s.Substring(6, 4);
			return null;
		}

		/// <summary>
		/// Returns a copy of this string converted to sentence case.
		/// </summary>
		/// <param name="s">String to convert.</param>
		public static string ToSentence(this string s) {
			return (s.Length < 1) ? s : s[0].ToString().ToUpper() + s.ToLower().Substring(1);
		}

		/// <summary>
		/// Returns a copy of this string converted to title case.
		/// </summary>
		/// <param name="s">String to convert.</param>
		public static string ToTitle(this string s) {
			// List of words that should usually be lowercase.
			var l = new string[] { "a", "an", "the", "of", "on", "to", "at", "in", "from", "atop", "with", "for", "and", "nor", "but", "or", "yet", "so" };

			// List of words that should usually be upppercase.
			var u = new string[] { "US", "I", "II", "III", "IIII", "IV", "V", "VI", "VII", "VIII", "IX", "X" };

			// Array of words in s.
			var w = s.Replace("  ", " ").Split(' ');

			for (int i = 0; i < w.Length; i++) {
				// Lowercase the words listed in l.
				// Except the first word.
				// Except words after a colon.
				if (l.Contains(w[i].Replace(":", "").Replace(",", "").ToLower()) && i != 0 && w[i - 1][w[i - 1].Length - 1] != ':')
					w[i] = w[i].ToLower();

				// Uppercase the words listed in u.
				else if (u.Contains(w[i].Replace(":", "").Replace(",", "").ToUpper()))
					w[i] = w[i].ToUpper();

				// Sentence case everything else.
				else
					w[i] = w[i].ToSentence();

				// Capitalize letter after slash.
				var x = w[i].Split('/');
				for (int j = 1; j < x.Length; j++) {
					x[j] = x[j].ToSentence();
				}
				w[i] = String.Join("/", x);

				// Capitalize letter after dash.
				x = w[i].Split('-');
				for (int j = 1; j < x.Length; j++) {
					x[j] = x[j].ToSentence();
				}
				w[i] = String.Join("-", x);

				// Capitalize letter after period.
				x = w[i].Split('.');
				for (int j = 1; j < x.Length; j++) {
					x[j] = x[j].ToSentence();
				}
				w[i] = String.Join(".", x);
			}

			// Capitalize first letter.
			w[0] = w[0].Length < 1 ? w[0] : w[0][0].ToString().ToUpper() + w[0].Substring(1);

			return String.Join(" ", w);
		}
	}
}
